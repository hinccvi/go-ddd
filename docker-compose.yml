version: '3.9'
services:
  server:
    image: server
    build:
      context: .
      dockerfile: cmd/server/Dockerfile
    volumes:
      - /tmp/app:/var/log/app
    ports:
      - "8022:8022"
    networks:
      - app
    environment:
      - APP_ENV=dev
      - APP_DSN=postgresql://localhost/postgres?sslmode=disable&user=postgres&password=postgres
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: "postgres:alpine"
    command: postgres -c 'max_connections=200'
    ports:
      - "5432"
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      app:
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    volumes:
      - /tmp/redis/redis.conf:/redis.conf
    ports:
      - "6379"
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      app:
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

networks:
  app: 
  